diff -urN genkernel-3.4.45-a/gen_compile.sh genkernel-3.4.45-b/gen_compile.sh
--- genkernel-3.4.45-a/gen_compile.sh	2012-11-06 06:32:57.000000000 +0000
+++ genkernel-3.4.45-b/gen_compile.sh	2017-12-20 07:52:50.863551334 +0000
@@ -327,14 +327,14 @@
 		compile_generic "${KERNEL_MAKE_DIRECTIVE_2}" kernel
 	fi
 
-	local firmware_in_kernel_line=`fgrep CONFIG_FIRMWARE_IN_KERNEL "${KERNEL_OUTPUTDIR}"/.config`
-	if [ -n "${firmware_in_kernel_line}" -a "${firmware_in_kernel_line}" != CONFIG_FIRMWARE_IN_KERNEL=y ]
-	then
-		print_info 1 "        >> Installing firmware ('make firmware_install') due to CONFIG_FIRMWARE_IN_KERNEL != y..."
-		MAKEOPTS="${MAKEOPTS} -j1" compile_generic "firmware_install" kernel
-	else
-		print_info 1 "        >> Not installing firmware as it's included in the kernel already (CONFIG_FIRMWARE_IN_KERNEL=y)..."
-	fi
+	#local firmware_in_kernel_line=`fgrep CONFIG_FIRMWARE_IN_KERNEL "${KERNEL_OUTPUTDIR}"/.config`
+	#if [ -n "${firmware_in_kernel_line}" -a "${firmware_in_kernel_line}" != CONFIG_FIRMWARE_IN_KERNEL=y ]
+	#then
+	#	print_info 1 "        >> Installing firmware ('make firmware_install') due to CONFIG_FIRMWARE_IN_KERNEL != y..."
+	#	MAKEOPTS="${MAKEOPTS} -j1" compile_generic "firmware_install" kernel
+	#else
+	#	print_info 1 "        >> Not installing firmware as it's included in the kernel already (CONFIG_FIRMWARE_IN_KERNEL=y)..."
+	#fi
 
 	local tmp_kernel_binary=$(find_kernel_binary ${KERNEL_BINARY_OVERRIDE:-${KERNEL_BINARY}})
 	local tmp_kernel_binary2=$(find_kernel_binary ${KERNEL_BINARY_2})
diff -urN genkernel-3.4.45-a/gen_initramfs.sh genkernel-3.4.45-b/gen_initramfs.sh
--- genkernel-3.4.45-a/gen_initramfs.sh	2012-11-06 06:32:57.000000000 +0000
+++ genkernel-3.4.45-b/gen_initramfs.sh	2017-12-20 07:51:53.959338023 +0000
@@ -585,11 +585,13 @@
 
 	cp -ax --parents ./lib/modules/${KV}/modules* ${TEMP}/initramfs-modules-${KV}-temp 2>/dev/null
 
-	mkdir -p "${TEMP}/initramfs-modules-${KV}-temp/etc/modules"
-	for group_modules in ${!MODULES_*}; do
-		group="$(echo $group_modules | cut -d_ -f2 | tr "[:upper:]" "[:lower:]")"
-		print_list ${!group_modules} > "${TEMP}/initramfs-modules-${KV}-temp/etc/modules/${group}"
-	done
+    find ${TEMP}/initramfs-modules-${KV}-temp -name "*.ko" -exec strip --strip-unneeded '{}' \;
+
+	#mkdir -p "${TEMP}/initramfs-modules-${KV}-temp/etc/modules"
+	#for group_modules in ${!MODULES_*}; do
+	#	group="$(echo $group_modules | cut -d_ -f2 | tr "[:upper:]" "[:lower:]")"
+	#	print_list ${!group_modules} > "${TEMP}/initramfs-modules-${KV}-temp/etc/modules/${group}"
+	#done
 	cd "${TEMP}/initramfs-modules-${KV}-temp/"
 	log_future_cpio_content
 	find . | cpio ${CPIO_ARGS} --append -F "${CPIO}" \
@@ -778,15 +780,15 @@
 		print_info 1 "initramfs: Not copying modules..."
 	fi
 
-	append_data 'zfs' "${ZFS}"
+	#append_data 'zfs' "${ZFS}"
 
-	append_data 'blkid' "${DISKLABEL}"
+	#append_data 'blkid' "${DISKLABEL}"
 
-	append_data 'unionfs_fuse' "${UNIONFS}"
+	#append_data 'unionfs_fuse' "${UNIONFS}"
 
-	append_data 'splash' "${SPLASH}"
+	#append_data 'splash' "${SPLASH}"
 
-	append_data 'modprobed'
+	#append_data 'modprobed'
 
 	if isTrue "${FIRMWARE}" && [ -n "${FIRMWARE_DIR}" ]
 	then
@@ -801,6 +803,21 @@
 
 	if isTrue "${INTEGRATED_INITRAMFS}"
 	then
+        # Compress modules with gzip to save memory when initramfs is uncompressed
+		print_info 1 "        >> Gzipping kernel modules in embedded initramfs ..."
+		INITTMP="${TMPDIR}/embedded-initramfs"
+		BAKARXZ="/etc/kernels/initramfs-${KV}${EXV}.cpio.xz"
+		mkdir -p ${INITTMP}
+		( cd ${INITTMP} ; cat ${CPIO} | cpio -id --quiet )
+		for curdir in ${INITTMP}/lib*/modules/
+		do
+			find ${curdir} -iname "*ko" -exec gzip -9 {} \;
+		done
+		( cd ${INITTMP} ; find . | cpio -o -H newc --quiet >| ${CPIO} )
+		print_info 1 "        >> Embedded initramfs archive created in ${CPIO}"
+		print_info 1 "        >> Copying embedded initramfs to ${BAKARXZ}"
+		cat ${CPIO} | xz >| "${BAKARXZ}"
+		rm -rf ${INITTMP}
 		# Explicitly do not compress if we are integrating into the kernel.
 		# The kernel will do a better job of it than us.
 		mv ${TMPDIR}/initramfs-${KV} ${TMPDIR}/initramfs-${KV}.cpio
