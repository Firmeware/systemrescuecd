diff -urN genkernel-3.4.10-orig/gen_bootloader.sh genkernel-3.4.10-sysrcd3/gen_bootloader.sh
--- genkernel-3.4.10-orig/gen_bootloader.sh	2008-06-05 17:47:55.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/gen_bootloader.sh	2011-07-23 10:28:32.000000000 +0100
@@ -75,7 +75,7 @@
 		# grub.conf already exists; so...
 		# ... Clone the first boot definition and change the version.
 		local TYPE
-		[ "${KERN_24}" -eq '1' ] && TYPE='rd' || TYPE='ramfs'
+		TYPE='ramfs'
 
 		cp -f ${GRUB_CONF} ${GRUB_CONF}.bak
 		awk 'BEGIN { RS="\n"; }
diff -urN genkernel-3.4.10-orig/gen_compile.sh genkernel-3.4.10-sysrcd3/gen_compile.sh
--- genkernel-3.4.10-orig/gen_compile.sh	2008-06-05 17:47:56.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/gen_compile.sh	2011-07-23 10:28:32.000000000 +0100
@@ -287,30 +287,13 @@
 	cd - > /dev/null
 }
 
-compile_dep() {
-	# Only run ``make dep'' for 2.4 kernels
-	if [ "${VER}" -eq '2' -a "${KERN_24}" -eq '1' ]
-	then
-		print_info 1 "kernel: >> Making dependencies..."
-		cd ${KERNEL_DIR}
-		compile_generic dep kernel
-	fi
-}
-
 compile_modules() {
 	print_info 1 "        >> Compiling ${KV} modules..."
 	cd ${KERNEL_DIR}
 	compile_generic modules kernel
 	export UNAME_MACHINE="${ARCH}"
-	# On 2.4 kernels, if MAKEOPTS > -j1 it can cause failures
-	if [ "${VER}" -eq '2' -a "${KERN_24}" -eq '1' ]
-	then
-		MAKEOPTS_SAVE="${MAKEOPTS}"
-		MAKEOPTS="${MAKEOPTS_SAVE/-j?/-j1}"
-	fi
 	[ "${INSTALL_MOD_PATH}" != '' ] && export INSTALL_MOD_PATH
 	compile_generic "modules_install" kernel
-	[ "${VER}" -eq '2' -a "${KERN_24}" -eq '1' ] && MAKEOPTS="${MAKEOPTS_SAVE}"
 	export MAKEOPTS
 	unset UNAME_MACHINE
 }
@@ -406,69 +389,59 @@
 }
 
 compile_lvm() {
-	compile_device_mapper
+	#compile_device_mapper
 	if [ ! -f "${LVM_BINCACHE}" ]
 	then
 		[ -f "${LVM_SRCTAR}" ] ||
 			gen_die "Could not find LVM source tarball: ${LVM_SRCTAR}! Please place it there, or place another version, changing /etc/genkernel.conf as necessary!"
 		cd "${TEMP}"
 		rm -rf ${LVM_DIR} > /dev/null
-		/bin/tar -zxpf ${LVM_SRCTAR} ||
-			gen_die 'Could not extract LVM source tarball!'
-		[ -d "${LVM_DIR}" ] ||
-			gen_die 'LVM directory ${LVM_DIR} is invalid!'
-		rm -rf "${TEMP}/device-mapper" > /dev/null
-		/bin/tar -jxpf "${DEVICE_MAPPER_BINCACHE}" -C "${TEMP}" ||
-			gen_die "Could not extract device-mapper binary cache!";
+		/bin/tar -zxpf ${LVM_SRCTAR} || gen_die 'Could not extract LVM source tarball!'
+		[ -d "${LVM_DIR}" ] || gen_die 'LVM directory ${LVM_DIR} is invalid!'
+		#rm -rf "${TEMP}/device-mapper" > /dev/null
+		#/bin/tar -jxpf "${DEVICE_MAPPER_BINCACHE}" -C "${TEMP}" || gen_die "Could not extract device-mapper binary cache!";
 		
 		cd "${LVM_DIR}"
 		print_info 1 'lvm: >> Configuring...'
-			LDFLAGS="-L${TEMP}/device-mapper/lib" \
-			CFLAGS="-I${TEMP}/device-mapper/include" \
-			CPPFLAGS="-I${TEMP}/device-mapper/include" \
-			./configure --enable-static_link --prefix=${TEMP}/lvm >> ${LOGFILE} 2>&1 ||
-				gen_die 'Configure of lvm failed!'
+			#LDFLAGS="-L${TEMP}/device-mapper/lib" \
+			#CFLAGS="-I${TEMP}/device-mapper/include" \
+			#CPPFLAGS="-I${TEMP}/device-mapper/include" \
+			./configure --enable-static_link --prefix=${TEMP}/lvm >> ${LOGFILE} 2>&1 || gen_die 'Configure of lvm failed!'
 		print_info 1 'lvm: >> Compiling...'
 			compile_generic '' utils
 			compile_generic 'install' utils
 
 		cd "${TEMP}/lvm"
 		print_info 1 '      >> Copying to bincache...'
-		strip "sbin/lvm.static" ||
-			gen_die 'Could not strip lvm.static!'
-		/bin/tar -cjf "${LVM_BINCACHE}" sbin/lvm.static ||
-			gen_die 'Could not create binary cache'
+		strip "sbin/lvm.static" || gen_die 'Could not strip lvm.static!'
+		/bin/tar -cjf "${LVM_BINCACHE}" sbin/lvm.static || gen_die 'Could not create binary cache'
 
 		cd "${TEMP}"
-		rm -rf "${TEMP}/device-mapper" > /dev/null
+		#rm -rf "${TEMP}/device-mapper" > /dev/null
 		rm -rf "${LVM_DIR}" lvm
 	fi
 }
 
 compile_dmraid() {
-	compile_device_mapper
+	#compile_device_mapper
 	if [ ! -f "${DMRAID_BINCACHE}" ]
 	then
 		[ -f "${DMRAID_SRCTAR}" ] ||
 			gen_die "Could not find DMRAID source tarball: ${DMRAID_SRCTAR}! Please place it there, or place another version, changing /etc/genkernel.conf as necessary!"
 		cd "${TEMP}"
 		rm -rf ${DMRAID_DIR} > /dev/null
-		/bin/tar -jxpf ${DMRAID_SRCTAR} ||
-			gen_die 'Could not extract DMRAID source tarball!'
-		[ -d "${DMRAID_DIR}" ] ||
-			gen_die 'DMRAID directory ${DMRAID_DIR} is invalid!'
-		rm -rf "${TEMP}/device-mapper" > /dev/null
-		/bin/tar -jxpf "${DEVICE_MAPPER_BINCACHE}" -C "${TEMP}" ||
-			gen_die "Could not extract device-mapper binary cache!";
+		/bin/tar -jxpf ${DMRAID_SRCTAR} || gen_die 'Could not extract DMRAID source tarball!'
+		[ -d "${DMRAID_DIR}" ] || gen_die 'DMRAID directory ${DMRAID_DIR} is invalid!'
+		#rm -rf "${TEMP}/device-mapper" > /dev/null
+		#/bin/tar -jxpf "${DEVICE_MAPPER_BINCACHE}" -C "${TEMP}" || gen_die "Could not extract device-mapper binary cache!";
 		
 		cd "${DMRAID_DIR}"
 		print_info 1 'dmraid: >> Configuring...'
 		
-		LDFLAGS="-L${TEMP}/device-mapper/lib" \
-		CFLAGS="-I${TEMP}/device-mapper/include" \
-		CPPFLAGS="-I${TEMP}/device-mapper/include" \
-		./configure --enable-static_link --prefix=${TEMP}/dmraid >> ${LOGFILE} 2>&1 ||
-			gen_die 'Configure of dmraid failed!'
+		#LDFLAGS="-L${TEMP}/device-mapper/lib" \
+		#CFLAGS="-I${TEMP}/device-mapper/include" \
+		#CPPFLAGS="-I${TEMP}/device-mapper/include" \
+		./configure --enable-static_link --prefix=${TEMP}/dmraid >> ${LOGFILE} 2>&1 || gen_die 'Configure of dmraid failed!'
 
 		# We dont necessarily have selinux installed yet... look into
 		# selinux global support in the future.
@@ -483,11 +456,10 @@
 		install -m 0755 -s tools/dmraid "${TEMP}/dmraid/sbin/dmraid"
 		print_info 1 '      >> Copying to bincache...'
 		cd "${TEMP}/dmraid"
-		/bin/tar -cjf "${DMRAID_BINCACHE}" sbin/dmraid ||
-			gen_die 'Could not create binary cache'
+		/bin/tar -cjf "${DMRAID_BINCACHE}" sbin/dmraid || gen_die 'Could not create binary cache'
 
 		cd "${TEMP}"
-		rm -rf "${TEMP}/device-mapper" > /dev/null
+		#rm -rf "${TEMP}/device-mapper" > /dev/null
 		rm -rf "${DMRAID_DIR}" dmraid
 	fi
 }
diff -urN genkernel-3.4.10-orig/gen_configkernel.sh genkernel-3.4.10-sysrcd3/gen_configkernel.sh
--- genkernel-3.4.10-orig/gen_configkernel.sh	2008-06-05 17:47:55.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/gen_configkernel.sh	2011-07-23 10:28:32.000000000 +0100
@@ -87,17 +87,6 @@
 		[ "$?" ] || gen_die 'Error: xconfig failed!'
 	fi
 
-	# Force this on if we are a 2.4 kernel or less
-	# This is required for initrd support
-	# Initramfs doesn't require this
-	# TODO: force on with --genzimage
-	if [ "${KERN_24}" -eq '1' ]
-	then
-		# Make sure Ext2 support is on...
-		sed -e 's/#\? \?CONFIG_EXT2_FS[ =].*/CONFIG_EXT2_FS=y/g' \
-			-i ${KERNEL_DIR}/.config 
-	fi
-
 	# Make sure lvm modules are on if --lvm/--lvm
 	if isTrue ${CMD_LVM}
 	then
diff -urN genkernel-3.4.10-orig/gen_determineargs.sh genkernel-3.4.10-sysrcd3/gen_determineargs.sh
--- genkernel-3.4.10-orig/gen_determineargs.sh	2008-06-05 17:47:55.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/gen_determineargs.sh	2011-07-23 10:28:32.000000000 +0100
@@ -6,20 +6,12 @@
 		/bin/tar -xj -C ${TEMP} -f ${KERNCACHE} kerncache.config 
 		if [ -e ${TEMP}/kerncache.config ]
 		then
-			KERN_24=0
 			VER=`grep ^VERSION\ \= ${TEMP}/kerncache.config | awk '{ print $3 };'`
 			PAT=`grep ^PATCHLEVEL\ \= ${TEMP}/kerncache.config | awk '{ print $3 };'`
 			SUB=`grep ^SUBLEVEL\ \= ${TEMP}/kerncache.config | awk '{ print $3 };'`
 			EXV=`grep ^EXTRAVERSION\ \= ${TEMP}/kerncache.config | sed -e "s/EXTRAVERSION =//" -e "s/ //g"`
-			if [ "${PAT}" -gt '4' -a "${VER}" -ge '2' ]
-			then
-				LOV=`grep ^CONFIG_LOCALVERSION\= ${TEMP}/kerncache.config | sed -e "s/CONFIG_LOCALVERSION=\"\(.*\)\"/\1/"`
-				KV=${VER}.${PAT}.${SUB}${EXV}${LOV}
-			else
-				KERN_24=1
-				KV=${VER}.${PAT}.${SUB}${EXV}
-			fi
-
+			LOV=`grep ^CONFIG_LOCALVERSION\= ${TEMP}/kerncache.config | sed -e "s/CONFIG_LOCALVERSION=\"\(.*\)\"/\1/"`
+			KV=${VER}.${PAT}.${SUB}${EXV}${LOV}
 		else
 			gen_die "Could not find kerncache.config in the kernel cache! Exiting."
 		fi
@@ -32,35 +24,7 @@
 		PAT=`grep ^PATCHLEVEL\ \= ${KERNEL_DIR}/Makefile | awk '{ print $3 };'`
 		SUB=`grep ^SUBLEVEL\ \= ${KERNEL_DIR}/Makefile | awk '{ print $3 };'`
 		EXV=`grep ^EXTRAVERSION\ \= ${KERNEL_DIR}/Makefile | sed -e "s/EXTRAVERSION =//" -e "s/ //g" -e 's/\$([a-z]*)//gi'`
-		if [ "${PAT}" -gt '4' -a "${VER}" -ge '2' -a -e ${KERNEL_DIR}/.config ]
-		then
-			KERN_24=0
-			cd ${KERNEL_DIR}
-			#compile_generic prepare kernel > /dev/null 2>&1
-			cd - > /dev/null 2>&1
-			[ -f "${KERNEL_DIR}/include/linux/version.h" ] && \
-				VERSION_SOURCE="${KERNEL_DIR}/include/linux/version.h"
-			[ -f "${KERNEL_DIR}/include/linux/utsrelease.h" ] && \
-				VERSION_SOURCE="${KERNEL_DIR}/include/linux/utsrelease.h"
-			# Handle new-style releases where version.h doesn't have UTS_RELEASE
-			if [ -f ${KERNEL_DIR}/include/config/kernel.release ]
-			then
-				UTS_RELEASE=`cat ${KERNEL_DIR}/include/config/kernel.release`
-				LOV=`echo ${UTS_RELEASE}|sed -e "s/${VER}.${PAT}.${SUB}${EXV}//"`
-				KV=${VER}.${PAT}.${SUB}${EXV}${LOV}
-			elif [ -n "${VERSION_SOURCE}" ]
-			then
-				UTS_RELEASE=`grep UTS_RELEASE ${VERSION_SOURCE} | sed -e 's/#define UTS_RELEASE "\(.*\)"/\1/'`
-				LOV=`echo ${UTS_RELEASE}|sed -e "s/${VER}.${PAT}.${SUB}${EXV}//"`
-				KV=${VER}.${PAT}.${SUB}${EXV}${LOV}
-			else
-				LCV=`grep ^CONFIG_LOCALVERSION= ${KERNEL_DIR}/.config | sed -r -e "s/.*=\"(.*)\"/\1/"`
-				KV=${VER}.${PAT}.${SUB}${EXV}${LCV}
-			fi
-		else
-			KERN_24=1
-			KV=${VER}.${PAT}.${SUB}${EXV}
-		fi
+		KV="${VER}.${PAT}.${SUB}${EXV}"
 	fi
 }
 
diff -urN genkernel-3.4.10-orig/generic/initrd.defaults genkernel-3.4.10-sysrcd3/generic/initrd.defaults
--- genkernel-3.4.10-orig/generic/initrd.defaults	2008-06-05 17:47:56.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/generic/initrd.defaults	2011-07-23 10:28:32.000000000 +0100
@@ -50,7 +50,7 @@
 KVER="${KMAJOR}.${KMINOR}"
 MISCOPTS='debug detect'
 
-if [ "${KMAJOR}" -eq 2 -a "${KMINOR}" -ge '6' ]
+if [ "${KMAJOR}" -ge 3 ] || [ "${KMAJOR}" -eq 2 -a "${KMINOR}" -eq '6' ]
 then
 	KV_2_6_OR_GREATER="yes"
 fi
@@ -59,7 +59,7 @@
 ROOT_LINKS='bin sbin lib lib32 lib64 boot usr opt emul'
 ROOT_TREES='etc root home var'
 INSMOD='insmod'
-if [ "${KMINOR}" -gt '4' ]
+if [ "${KMAJOR}" -ge 3 ] || [ "${KMAJOR}" -eq 2 -a "${KMINOR}" -gt '4' ]
 then
 	KSUFF='.ko'
 else
diff -urN genkernel-3.4.10-orig/gen_initramfs.sh genkernel-3.4.10-sysrcd3/gen_initramfs.sh
--- genkernel-3.4.10-orig/gen_initramfs.sh	2008-06-05 17:47:56.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/gen_initramfs.sh	2011-07-23 10:36:32.000000000 +0100
@@ -319,14 +319,19 @@
 		print_info 2 "initramfs: >> Copying ${i}${MOD_EXT}..."
 		cp -ax --parents "${mymod}" "${TEMP}/initramfs-modules-${KV}-temp"
 	done
-	
+
 	cp -ax --parents ./lib/modules/${KV}/modules* ${TEMP}/initramfs-modules-${KV}-temp 2>/dev/null
 
-	mkdir -p "${TEMP}/initramfs-modules-${KV}-temp/etc/modules"
-	for group_modules in ${!MODULES_*}; do
-		group="$(echo $group_modules | cut -d_ -f2 | tr "[:upper:]" "[:lower:]")"
-		print_list ${!group_modules} > "${TEMP}/initramfs-modules-${KV}-temp/etc/modules/${group}"
-	done
+	find ${TEMP}/initramfs-modules-${KV}-temp -name "*.ko" -exec strip --strip-unneeded '{}' \;
+
+	#find ${TEMP}/initramfs-modules-${KV}-temp -name "*.ko" -exec gzip -9 '{}' \;
+
+	#mkdir -p "${TEMP}/initramfs-modules-${KV}-temp/etc/modules"
+	#for group_modules in ${!MODULES_*}; do
+	#	group="$(echo $group_modules | cut -d_ -f2 | tr "[:upper:]" "[:lower:]")"
+	#	print_list ${!group_modules} > "${TEMP}/initramfs-modules-${KV}-temp/etc/modules/${group}"
+	#done
+
 	cd "${TEMP}/initramfs-modules-${KV}-temp/"
 	find . | cpio ${CPIO_ARGS} --append -F "${CPIO}"
 	cd "${TEMP}"
@@ -460,13 +465,13 @@
 	echo | cpio ${CPIO_ARGS} -F "${CPIO}" 2>/dev/null \
 		|| gen_die "Could not create empty cpio at ${CPIO}"
 
-	append_data 'base_layout'
-	append_data 'auxilary'
-	append_data 'busybox' "${BUSYBOX}"
-	append_data 'lvm' "${LVM}"
-	append_data 'dmraid' "${DMRAID}"
-	append_data 'evms' "${EVMS}"
-	append_data 'mdadm' "${MDADM}"
+	#append_data 'base_layout'
+	#append_data 'auxilary'
+	#append_data 'busybox' "${BUSYBOX}"
+	#append_data 'lvm' "${LVM}"
+	#append_data 'dmraid' "${DMRAID}"
+	#append_data 'evms' "${EVMS}"
+	#append_data 'mdadm' "${MDADM}"
 	
 	if [ "${NOINITRDMODULES}" -eq '0' ]
 	then
@@ -489,16 +494,32 @@
 		append_data 'overlay'
 	fi
 
-	gzip -9 "${CPIO}"
-	mv -f "${CPIO}.gz" "${CPIO}"
+	#gzip -9 "${CPIO}"
+	#mv -f "${CPIO}.gz" "${CPIO}"
+	cat "${CPIO}" | lzma -5 > "${CPIO}.lzma"
+	mv -f "${CPIO}.lzma" "${CPIO}"
 
 	if isTrue "${INTEGRATED_INITRAMFS}"
 	then
-#		cp ${TMPDIR}/initramfs-${KV} ${KERNEL_DIR}/usr/initramfs_data.cpio.gz
-		mv ${TMPDIR}/initramfs-${KV} ${TMPDIR}/initramfs-${KV}.cpio.gz
-#		sed -i "s|^.*CONFIG_INITRAMFS_SOURCE=.*$|CONFIG_INITRAMFS_SOURCE=\"${TMPDIR}/initramfs-${KV}.cpio.gz\"|" ${KERNEL_DIR}/.config
+		print_info 1 "        >> Gzipping kernel modules in embedded initramfs ..."
+		INITTMP="${TMPDIR}/embedded-initramfs"
+		BAKARXZ="/etc/kernels/initramfs-${KV}${EXV}.cpio.xz"
+		mkdir -p ${INITTMP}
+		( cd ${INITTMP} ; xzcat ${TMPDIR}/initramfs-${KV} | cpio -id --quiet )
+		for curdir in ${INITTMP}/lib*/modules/
+		do
+			find ${curdir} -iname "*ko" -exec gzip -9 {} \;
+		done
+		( cd ${INITTMP} ; find . | cpio -o -H newc --quiet | xz --check=crc32 >| ${TMPDIR}/initramfs-${KV}.cpio.xz )
+		print_info 1 "        >> Embedded initramfs archive created in ${TMPDIR}/initramfs-${KV}.cpio.xz"
+		print_info 1 "        >> Copying embedded initramfs to ${BAKARXZ}"
+		cp ${TMPDIR}/initramfs-${KV}.cpio.xz "${BAKARXZ}"
+		rm -rf ${INITTMP}
+		rm -f ${TMPDIR}/initramfs-${KV}
 		sed -i '/^.*CONFIG_INITRAMFS_SOURCE=.*$/d' ${KERNEL_DIR}/.config
-		echo -e "CONFIG_INITRAMFS_SOURCE=\"${TMPDIR}/initramfs-${KV}.cpio.gz\"\nCONFIG_INITRAMFS_ROOT_UID=0\nCONFIG_INITRAMFS_ROOT_GID=0" >> ${KERNEL_DIR}/.config
+		echo -e "CONFIG_INITRAMFS_SOURCE=\"${TMPDIR}/initramfs-${KV}.cpio.xz\"\nCONFIG_INITRAMFS_ROOT_UID=0\nCONFIG_INITRAMFS_ROOT_GID=0" >> ${KERNEL_DIR}/.config
+		sed -i '/^.*CONFIG_INITRAMFS_COMPRESSION_XZ.*/d' ${KERNEL_DIR}/.config
+		echo -e "CONFIG_INITRAMFS_COMPRESSION_XZ=y" >> ${KERNEL_DIR}/.config
 	fi
 
 	if ! isTrue "${CMD_NOINSTALL}"
diff -urN genkernel-3.4.10-orig/genkernel genkernel-3.4.10-sysrcd3/genkernel
--- genkernel-3.4.10-orig/genkernel	2008-06-05 17:47:55.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/genkernel	2011-07-23 10:32:48.000000000 +0100
@@ -222,9 +222,6 @@
 	# Configure kernel
 	config_kernel
 	
-	# Make deps
-	compile_dep
-
 	# Make prepare [2.6]
 	if [ "${ARCH_HAVENOPREPARE}" = '' ]
 	then
@@ -301,21 +298,14 @@
 then
 	[ "${DISKLABEL}" -eq '1' ] && compile_e2fsprogs
 
-	if [ "${KERN_24}" != '1' ]
-	then
-	    if [ "${BUSYBOX}" -eq '1' ]
-	    then
+    	if [ "${BUSYBOX}" -eq '1' ]
+    	then
 		# Compile Busybox
 		compile_busybox
-	    fi
-	    
-	    # Compile initramfs
-	    create_initramfs
-	else
-	    # Create initrd
-	    compile_busybox
-	    create_initrd
-	fi
+    	fi
+    
+    	# Compile initramfs
+    	create_initramfs
 else
 	print_info 1 'initrd: Not building since only the kernel was requested...'
 fi
@@ -347,8 +337,7 @@
 		print_info 1 ''
 		print_info 1 '    Where $ROOT is the device node for your root partition as the'
 		print_info 1 '    one specified in /etc/fstab'
-	elif [ "${KERN_24}" != '1' ]
-	then
+	else
 		print_info 1 '    real_root=/dev/$ROOT'
 		print_info 1 ''
 		print_info 1 '    Where $ROOT is the device node for your root partition as the'
@@ -358,17 +347,6 @@
 		print_info 1 'tell your bootloader to use the provided INITRAMFS file. Otherwise;'
 		print_info 1 'substitute the root argument for the real_root argument if you are'
 		print_info 1 'not planning to use the initrd...'
-	else	
-		print_info 1 '    root=/dev/ram0 real_root=/dev/$ROOT init=/linuxrc'
-		[ "${INITRD_SIZE}" -ge 4096 ] && print_info 1 "    ramdisk_size=${INITRD_SIZE}"
-		print_info 1 ''
-		print_info 1 '    Where $ROOT is the device node for your root partition as the'
-		print_info 1 '    one specified in /etc/fstab'
-		print_info 1 ''
-		print_info 1 "If you require Genkernel's hardware detection features; you MUST"
-		print_info 1 'tell your bootloader to use the provided INITRD file. Otherwise;'
-		print_info 1 'substitute the root argument for the real_root argument if you are'
-		print_info 1 'not planning to use the initrd...'
 	fi
 fi
 
diff -urN genkernel-3.4.10-orig/gen_moddeps.sh genkernel-3.4.10-sysrcd3/gen_moddeps.sh
--- genkernel-3.4.10-orig/gen_moddeps.sh	2008-06-05 17:47:56.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/gen_moddeps.sh	2011-07-23 10:28:32.000000000 +0100
@@ -2,12 +2,7 @@
 
 modules_kext()
 {
-	if [ "${PAT}" -gt "4" ]
-	then
-		KEXT=".ko"
-	else
-		KEXT=".o"
-	fi
+	KEXT=".ko"
 	echo ${KEXT}
 }
 
diff -urN genkernel-3.4.10-orig/gen_package.sh genkernel-3.4.10-sysrcd3/gen_package.sh
--- genkernel-3.4.10-orig/gen_package.sh	2008-06-05 17:47:56.000000000 +0100
+++ genkernel-3.4.10-sysrcd3/gen_package.sh	2011-07-23 10:28:32.000000000 +0100
@@ -24,12 +24,7 @@
 	
 	if ! isTrue "${INTEGRATED_INITRAMFS}"
 	then
-		if [ "${KERN_24}" != '1' ]
-		then
-			[ "${BUILD_INITRD}" -ne 0 ] && { cp "${TMPDIR}/initramfs-${KV}" "${TEMP}/minkernpackage/initramfs-${ARCH}-${KV}" || gen_die 'Could not copy the initramfs for the kernel package!'; }
-		else
-			[ "${BUILD_INITRD}" -ne 0 ] && { cp "${TMPDIR}/initrd-${KV}" "${TEMP}/minkernpackage/initrd-${ARCH}-${KV}" || gen_die 'Could not copy the initrd for the kernel package!'; }
-		fi
+		[ "${BUILD_INITRD}" -ne 0 ] && { cp "${TMPDIR}/initramfs-${KV}" "${TEMP}/minkernpackage/initramfs-${ARCH}-${KV}" || gen_die 'Could not copy the initramfs for the kernel package!'; }
 	fi
 
 	if [ "${KERNCACHE}" != "" ]
