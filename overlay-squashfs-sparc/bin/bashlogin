#!/bin/sh
# ============ ENV VARS ================================
cd /root
export HOME=/root
export SHELL=/bin/zsh
export PATH=/sbin:/bin:/usr/sbin:/usr/bin
export path="/sbin /bin /usr/sbin /usr/bin"
export MAIL=/var/mail/root
export USER=root

# ============ INITIALIZATIONS =========================
if [ $(tty) = "/dev/tty1" ] 
then
	# ---- create directories ----
	mkdir -p /mnt/custom /mnt/gentoo /mnt/windows /mnt/floppy

	# ---- launch autorun scripts ----
	cat /proc/cmdline | grep -q "hdinstall"
	if [ "$?" -eq 0 ]
	then
		/usr/sbin/knx-hdinstall
	else
		/usr/sbin/autorun
	fi

	# ---- clear screen is resolution 640x480 ----
	cat /proc/cmdline | grep -q "vga=785" && clear
	cat /proc/cmdline | grep -q "640x480" && clear
	setterm -blank 0 -powersave off

	# ---- create directories for samba server ----
	mkdir -p /var/run/samba
	mkdir -p /var/cache/samba

	# ---- create a kernel options file ----
	if [ -f /proc/config.gz ]
	then
		cat /proc/config.gz | gzip -d > /root/kernel-$(uname -r).conf
	fi

	# ---- eject cdrom if doeject used with docache ----
	cat /proc/cmdline | grep -q "doeject"
	if [ "$?" -eq 0 ]
	then
		if [ -f /mnt/cdrom/sysrcd.dat ]
		then
			cat /proc/cmdline | grep -q "docache"
			if [ "$?" -eq 0 -a -f /mnt/sysrcd.dat ]
			then
				eject /mnt/cdrom
				if [ "$?" -eq 0 ]
				then
					echo "The cdrom was ejected successfully."
				else
					echo "The cdrom cannot be ejected."
				fi
			else
				echo "Cannot eject cdrom since docache was not enabled or failed."
			fi
		fi
	fi

	# ---- run DHCP if asked on cmdline (dodhcp) ---
	cat /proc/cmdline | grep -q "dodhcp"
	if [ "$?" -eq 0 ]
	then
		NETDEVICES="$(awk -F: '/eth.:|tr.:|ath.:|wlan.:/{print $1}' /proc/net/dev 2>/dev/null)"
		for nics in ${NETDEVICES}
		do
			dhcpcd -n -t 10 -h $(hostname) $nics
			echo "Network device ${nics} detected, DHCP broadcasting for IP ..."
		done
	fi

	# ---- run STARTX if asked on cmdline (dostartx) ----
	cat /proc/cmdline | grep -q "dostartx"
	if [ "$?" -eq 0 ]
	then
		startx >/var/log/startx1.log 2>/var/log/startx2.log &
	fi
fi

# ============ PRINT MESSAGE ===========================
lc1='\e[01;31m' # light red
dc1='\e[00;31m' # dark red
lc2='\e[01;37m' # white
dc2='\e[00;37m' # gray

LINES=$(stty size|cut -d" " -f1)
fbecho() 
{
  [ $LINES -ge 28 ] && echo
}

fbecho
echo -e "${lc1} =========== ${lc2}SystemRescue-Cd${lc1} ----- ${lc2}v0.4.0-sparc${lc1} ========= ${lc2}$(basename $(tty))${dc2}/6 ${lc1}=="
echo -e "${lc1} Homepage:............${dc1}http://www.sysresccd.org/"
echo
echo -e "${dc1}*${dc2} Type ${lc2}net-setup eth0${dc2} to specify ethernet configuration."
echo -e "${dc1}*${dc2} If you have a corporate ethernet network, you can configure by hand:"
echo -e "   ${dc1}-${dc2} ifconfig eth0 192.168.x.a (your static IP address)"
echo -e "   ${dc1}-${dc2} route add default gw 192.168.x.b (IP address of the gateway)"
fbecho
echo -e "${dc1}*${dc2} To start an ssh server on this system, type ${lc2}/etc/init.d/sshd start${dc2}."
echo -e "   You will need to create an user or to change the root password with ${lc2}passwd${dc2}."
fbecho
echo -e "${dc1}*${dc2} Available console text editors : ${lc2}nano${dc2}, ${lc2}vim${dc2}, ${lc2}joe${dc2}."
echo -e "${dc1}*${dc2} Graphical web browser in the console: ${lc2}links -g www.web-site.org${dc2}."
fbecho
echo -e "${dc1}*${lc1} WARNING${dc2} : Never mount anything on /mnt! It would freeze the system."
echo -e "   Use ${lc2}mkdir /mnt/mydir${dc2} and mount on /mnt/mydir instead."
fbecho

# ============ SHELL PROMPT ============================
exec $SHELL --login
