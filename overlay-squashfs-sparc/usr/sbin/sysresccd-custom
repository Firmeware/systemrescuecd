#!/bin/bash
# Project page: http://www.system-rescue-cd.org/
# By Francois Dupoux
# (C) 2003-2007 Francois Dupoux
# This scipt is available under the GPL-2 license.

## HELP AND BASIC ARGUMENT PROCESSING
#####################################

usage() 
{
  cat <<EOF
sysresccd-custom: SystemRescueCd customization script for SPARC
Syntax:           sysresccd-custom <command> ...

Please, read the manual for help about how to use this script.
http://www.system-rescue-cd.org/Sysresccd-manual-en_How_to_personalize_SystemRescueCd

Commands (execute in that order):
 1) extract                    Extract files from the squashfs into your hard disk
 2) squashfs                   Create the new compressed loopback squashfs filesystem
 3) setkmap <keymap-code>      Force a keymap to be loaded without prompt at startup
 4) isogen <cd_volume_name>    Generate the final bootable ISO image

 -h|--help	               Display this screen

Copyright 2003-2007 Francois Dupoux. (http://www.system-rescue-cd.org)
Distributed under the GNU Public License version 2
EOF
}

## MISC FUNCTIONS: Many utilities functions
###########################################

# show the error message ($1 = first line of the message)
help_readman()
{
	echo "$1"
	echo "Please, read the manual for more help about this script"
	echo "Web: http://www.system-rescue-cd.org"
	exit 1
}

## Main
###########################################

if [ "$1" = "-h" ] || [ "$1" = "--help" ]
then
	usage
	exit 1
fi

if [ "`whoami`" != "root" ]
then
	help_readman "$0: This script requires root privileges to operate."
	#exit 1
fi

if [ ! -d "/mnt/custom" ]
then
	help_readman "$0: You need to mount a partition with free space on /mnt/custom"
	exit 1
fi

cat /proc/mounts | grep " /mnt/custom " > /dev/null
if [ $? -eq 0 ]; then
	echo "/mnt/custom is mounted -> ok"
else
	help_readman "$0: /mnt/custom is not mounted. Cannot continue."
	exit 1
fi

PROG=${0}
ISO_VOLUME="${2}"
KEYMAP="${2}"

## ERROR HANDLING
#####################################

die()
{
	if [ -n "$1" ]
	then
		echo "${PROG}: error: $1"
	else
		echo "${PROG}: aborting."
	fi
	exit 1
}

extract_die()
{
	if [ -n "$1" ]
	then
		echo "do_extract: error: $1"
	else
		echo "do_extract: aborting."
	fi
	exit 1
}

squashfs_die()
{
	#umount /mnt/custom/customcd/cloop/files/
	if [ -n "$1" ]
	then
		echo "do_squashfs: error: $1"
	else
		echo "do_squashfs: aborting."
	fi
	exit 1
}

isogen_die()
{
	if [ -n "$1" ]
	then
		echo "do_isogen: error: $1"
	else
		echo "do_isogen: aborting."
	fi
	exit 1
}

setkmap_die()
{
	if [ -n "$1" ]
	then
		echo "do_setkmap: error: $1"
	else
		echo "do_setkmap: aborting."
	fi
	exit 1
}

## MISC FUNCTIONS: Many utilities functions
###########################################

# $1 == MB required by the function
check_freespace()
{
	SIZE=`(\df -m -P) | grep " /mnt/custom$" | tail -n 1 | awk '{print $4}'`

	if [ $SIZE -gt $1 ]; then
		echo "there is enough estimated free space here ($SIZE MB) -> ok"
	else
		echo "$PROG: not enough room in /mnt/custom"
		help_readman "You only have $SIZE MB free, and the script needs at least $1 MB free"
		exit 1
	fi
}

# check the original SystemRescueCd disc is mounted
check_origcdmounted()
{
	grep docache /proc/cmdline > /dev/null
	if [ $? -eq 1 ]; then
		echo "docache not used -> ok"
	fi

	CMDLINE="`cat /proc/cmdline`"
	for x in $CMDLINE
	do
		if [ "$x" = "docache" ]
		then
			docache_error=0
			cat /proc/mounts | grep " /mnt/cdrom " > /dev/null
			if [ $? -eq 1 ]; then
				docache_error=1
			fi

			if [ $docache_error -eq 0 ]; then
				if [ ! -f /mnt/cdrom/sysrcd.dat ]; then
					docache_error=1
				fi
				if [ ! -d /mnt/cdrom/boot ]; then
					docache_error=1
				fi
				if [ ! -f /mnt/cdrom/boot/silo.conf ]; then
					docache_error=1
				fi
			fi

			if [ $docache_error -eq 1 ]; then
				echo "$0: When using docache option you must mount the "
				help_readman "original version of SystemRescueCd."
				exit 1
			else
				echo "docache used and original /mnt/cdrom is mounted -> ok"
			fi

		fi
	done
}

## MAIN FUNCTIONS: Extracting the squashfs to the hard disk
########################################################
do_extract_check()
{
	# check for free space
	check_freespace 500
}

do_extract()
{
	# check the original cd is mounted
	check_origcdmounted

	# copy the boot files
	mkdir -p /mnt/custom/customcd/isoroot/
	rm -rf /mnt/custom/customcd/isoroot/*
	cp -a /mnt/cdrom/boot /mnt/custom/customcd/isoroot/ || extract_die

	# extract files
	mkdir -p /mnt/custom/customcd/files/
	rm -rf /mnt/custom/customcd/files/*
	cp -dpR /mnt/livecd/* /mnt/custom/customcd/files/ || extract_die
}

## MAIN FUNCTIONS: Create the new squashfs image from files
########################################################
do_squashfs()
{
	# check for free space
	check_freespace 350

	mkdir -p /mnt/custom/customcd/
	mkdir -p /mnt/custom/customcd/files/
	mkdir -p /mnt/custom/customcd/isoroot/
	touch "/mnt/custom/customcd/files/customized"

	mksquashfs /mnt/custom/customcd/files/ /mnt/custom/customcd/isoroot/sysrcd.dat || squashfs_die
	(cd /mnt/custom/customcd/isoroot/ ; md5sum sysrcd.dat > sysrcd.md5)

	# Change permissions to allow the file to be sent by thttpd for PXE-boot
	chmod 666 /mnt/custom/customcd/isoroot/sysrcd.dat
	chmod 666 /mnt/custom/customcd/isoroot/sysrcd.md5
}

## MAIN FUNCTIONS: Force a keymap to be loaded without prompt
########################################################
do_setkmap()
{
	if [ "$KEYMAP" = "" ]
	then
		usage
		setkmap_die
	fi

	if [ ! -d "/mnt/custom/customcd/isoroot/boot" ]
	then
	        help_readman "$PROG: You have to run command prepiso before setkmap"
		exit 1
	fi

	echo "Keymap to be loaded: ${KEYMAP}"

	# Set keymap in silo.conf
	cp /mnt/custom/customcd/isoroot/boot/silo.conf /mnt/custom/customcd/isoroot/boot/silo.bak
	sed -e "s:append:append setkmap=${KEYMAP}:g" /mnt/custom/customcd/isoroot/boot/silo.bak > /mnt/custom/customcd/isoroot/boot/silo.conf
}

## MAIN FUNCTIONS: Create the new ISO image
########################################################
do_isogen()
{
	# check for free space
	check_freespace 200

	if [ "$ISO_VOLUME" = "" ]
	then
		usage
		isogen_die
	fi

	mkdir -p /mnt/custom/customcd/isofile/
	rm -rf /mnt/custom/customcd/isofile/*

	if [ ! -d "/mnt/custom/customcd/isoroot/boot" ]
	then
	        help_readman "$PROG: You have to run command squashfs before isogen"
		exit 1
	fi

	touch "/mnt/custom/customcd/isoroot/customized"

	echo "Volume name of the CDRom: ${ISO_VOLUME}"

	mkisofs -G /boot/isofs.b -J -V "${ISO_VOLUME}" -B ... -r \
		-o /mnt/custom/customcd/isofile/sysresccd-new.iso \
		/mnt/custom/customcd/isoroot || isogen_die

	md5sum /mnt/custom/customcd/isofile/sysresccd-new.iso > /mnt/custom/customcd/isofile/sysresccd-new.md5

	echo "Final ISO image: /mnt/custom/customcd/isofile/sysresccd-new.iso"
}


## MAIN SHELL FUNCTION
########################################################

case "$1" in
    extract)
    	do_extract_check
    	do_extract;;
    extract-nosizecheck)
    	do_extract;;
    squashfs)
        do_squashfs;;
    setkmap)
        do_setkmap;;
    isogen)
        do_isogen;;
    *)
        usage 
        exit 1
        ;;
esac
exit 0
